  - name: Update all packages
    ansible.builtin.apt:
      update_cache: yes
      name: "*"
      state: latest
    become: true
    become_user: root
  - name: Install git
    apt:
      name: git
      state: latest
    become: true
    become_user: root
  - name: Check if the directory exists in the machine
    stat:
      path: "{{destdir}}"
    register: dir
  - name: Clone the repository if the directory doesn't exist in the machine
    git:
      repo: "https://github.com/qxf2/practice-testing-ai-ml.git"
      dest: "{{destdir}}"
    when: dir.stat.exists == false
  - name: Pull from the repository on github if the directory exists 
    shell:
      cmd: "git pull"
      chdir: "{{destdir}}"
    when: dir.stat.exists == true
  - name: Install necessary packages - few more packages and development tools
    apt:
      name: ['python3-pip','python3-dev','build-essential','libssl-dev','python3-setuptools','python3-venv','nginx']
      state: latest
    become: true
    become_user: root
  - name: Install flask and uwsgi with pip in the virtual environment
    pip:
      name: ['uwsgi']
      virtualenv: "{{env}}"
      chdir: "{{destdir}}"
      virtualenv_command: python3 -m venv venv-pto-detector
  - name: Install packages from requirement.txt with pip in the virtual environment
    pip:
      requirements: "{{requirement}}"
      virtualenv: "{{env}}"
      chdir: "{{destdir}}"
      state: latest

  - name: Create a systemd unit file
    become: true
    become_user: root
    copy:
      src: "{{app_name}}.service"
      dest: "/etc/systemd/system/{{app_name}}.service"
      remote_src: no
      force: no
    notify: Start ptodetector
  - name: Start ptodetector
    become: true
    become_user: root
    service:
      name: ptodetector
      state: restarted

  - name: Configuring nginx to proxy requests
    template:
      src: "nginx.j2"
      dest: "/etc/nginx/sites-available/{{app_name}}"
      force: no
    become: true
    become_user: root
  - name: Remove default nginx site config
    file:
      path: "/etc/nginx/sites-enabled/default"
      state: absent
    become: true
    become_user: root
  - name: Enable the nginx server block config
    become: true
    become_user: root
    file:
      src: "/etc/nginx/sites-available/{{app_name}}"
      dest: "/etc/nginx/sites-enabled/{{app_name}}"
      state: link
      force: yes
    notify: Restart nginx
  - name: Restart nginx
    become: true
    become_user: root
    ansible.builtin.service:
      name: nginx
      state: restarted
  - name: Allow all incoming http
    iptables:
      chain: INPUT
      ctstate: NEW,ESTABLISHED
      jump: ACCEPT
      protocol: tcp
      destination_port: "80"
    become: true
    become_user: root
  - name: Allow all outcomming http
    iptables:
      chain: OUTPUT
      ctstate: ESTABLISHED
      jump: ACCEPT
      protocol: tcp
      source_port: "80"
    become: true
    become_user: root